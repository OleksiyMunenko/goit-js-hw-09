{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EAEFI,EAAQ,C,SAAEN,E,MAAUC,IAGpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA5CbQ,KAAO,CACLC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,qBACnCE,UAAWH,SAASC,cAAc,oBAClCG,YAAaJ,SAASC,cAAc,sBACpCI,UAAWL,SAASC,cAAc,WAGpCH,KAAKO,UAAUC,iBAAiB,SAEhC,SAAkBC,GAChBA,EAAEC,iBACF,MAAMC,EAAsBX,KAAKM,YAAYM,MACvCC,EAAYb,KAAKK,UAAUO,MAC3BE,EAAad,KAAKI,WAAWQ,MACnC,IAAIG,EAAQD,EAEZ,IAAK,IAAIE,EAAI,EAAGA,GAAKL,EAAqBK,GAAK,EAAG,CAGhD1B,EAFe0B,EAESD,GACrBE,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjB0B,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAAqB7B,QAAeC,MAAU,IAEvE6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClB0B,EAAA9B,GAAS+B,OAAOG,QAAQ,oBAAoB/B,QAAeC,MAAU,IAGzEuB,EAAQD,EAAaD,C,CAEvBb,KAAKC,KAAKsB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nrefs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('input[name=delay]'),\n  stepInput: document.querySelector('input[name=step]'),\n  amountInput: document.querySelector('input[name=amount]'),\n  submitBtn: document.querySelector('button'),\n};\n\nrefs.submitBtn.addEventListener('click', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const numOfCreatedPromise = refs.amountInput.value;\n  const delayStep = refs.stepInput.value;\n  const firstDelay = refs.delayInput.value;\n  let delay = firstDelay;\n\n  for (let i = 1; i <= numOfCreatedPromise; i += 1) {\n    let position = i;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay = firstDelay + delayStep;\n  }\n  refs.form.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","refs","form","document","querySelector","delayInput","stepInput","amountInput","submitBtn","addEventListener","e","preventDefault","numOfCreatedPromise","value","delayStep","firstDelay","delay1","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.5d167ace.js.map"}